@model eProjectSemester3_1.ViewModels.MemberAddViewModel

@{
    ViewBag.Title = "Register";
}

<div class="container">
    <div class="row main">
        <div class="main-login main-center">
            <h4>Use a local account to log in.</h4>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ReturnUrl);

                <script>
                    function checkuser() {
                        var moderateActionViewModel = new Object();
                        moderateActionViewModel.username = $("#UserName").val();

                        var strung = JSON.stringify(moderateActionViewModel);
                        
                        $.ajax({
                            url: '/Members/CheckUser',
                            type: 'POST',
                            data: strung,
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                                if (data) {
                                    $("#UserNameError").text("Account already exists");
                                } else {
                                    $("#UserNameError").text("");
                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                ShowUserMessage("Error: " + xhr.status + " " + thrownError);
                            }
                        });
                    }
                </script>
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-users fa" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Username", @onchange="checkuser()" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger",@id= "UserNameError" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-lock fa-lg" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Password" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-lock fa-lg" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.RePassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm your Password" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-user fa" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa fa-envelope fa" aria-hidden="true"></i></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your Email" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Register" class="btn btn-primary btn-lg btn-block login-button" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>